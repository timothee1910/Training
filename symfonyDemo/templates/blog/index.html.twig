{% extends 'base.html.twig' %}

{% block title %}Hello BlogController!{% endblock %}

{% block body %}
	<style>
		.example-wrapper {
			margin: 1em auto;
			max-width: 800px;
			width: 95%;
			font: 18px/1.5 sans-serif;
		}
		
		.example-wrapper code {
			background: #F5F5F5;
			padding: 2px 6px;
		}
	</style>
	<section class="articles">
		{% for article in articles %}
			<article>
				<h2>{{ article.title }}</h2>
				<div class="metadata">
					<span>Ecrit le {{ article.createdAt | date('d/m/Y') }} à {{ article.createdAt | date('H:i') }} dans la catégorie beau gosse</span>
					<div class="content"><img src="{{ article.image }}" alt="">
						{{ article.content |raw }}
						<a href="{{ path('blog_show', {id: article.id}) }}" class="btn btn-primary">Lire la suite</a>
						<a id="link_{{ article.id }}" class="btn btn-outline-primary js-like" href="{{ path('article_like', {id:article.id}) }}">
							{% if app.user and article.isLikedByUser(app.user) %}
								<i class="fa fa-thumbs-o-up"></i>
							{% else %}
								<i class="fa fa-thumbs-up"></i>
							{% endif %}
							<span class="js-likes">{{ article.likes | length }}</span>
							<span class="js-label">J'aime</span>
						</a>
					</div>
				</div>
			</article>
		{% endfor %}
	</section>
	<div class="example-wrapper"></div>
{% endblock %}
{% block javascripts %}
	<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
	<script>
		function onClickBtnLike(event) {
		    event.preventDefault(); //on annule le comportement par defaut qui est -> ouvrir une nouvelle page
		    //this dans une fonction qui est lié a un evenement
			// C'est l'élément html qui déclenche l'évènement lui même
			//Ici le this renvoie le lien (a savoir le <a>)
		    const url = this.href;
            // avec le this on prend tous les elements du dom qui sont dans le <a>
			// avec querySelector on prend le span présent dans le this qui a la class XXX
		    const spanCount = this.querySelector('span.js-likes');
		    const icon = this.querySelector('i');
		    var aCurrent = this.id;
            //console.log(this);
            //axios.get(url) est une promesse (TODO)
		    axios.get(url).then(function (response) {
		        const likes = response.data.likes;
		        spanCount.textContent = likes;
		        //ON cherche a savoir quelle classe est appelé
		        if (icon.classList.contains('fa-thumbs-o-up')) {
		            icon.classList.replace('fa-thumbs-o-up','fa-thumbs-up');
		        } else {
                    icon.classList.replace('fa-thumbs-up','fa-thumbs-o-up');
		        }
		        console.log(response)
            }).catch(function (error) {
                if (error.response.status === 403){
                    var text =document.createElement('div');
                    var message = document.createTextNode('Il manque une authentification');
                    text.appendChild(message);
                    text.style.color="red";
                    text.id="error_"+aCurrent;
                    var getLink = document.getElementById(aCurrent);
                    var messageError=getLink.insertBefore(text,getLink.childNodes[0]);
                    if (document.getElementById("error_"+aCurrent)) {
                        messageError.onclick = function () {
                            text.style.display="none";
                        }
                        //text ="";
                    } else {
                        text.style.display="block";
                    }
                    //console.log(messageError);
                }
            })
		}
		//console.log(document.querySelectorAll('a.js-like'))
		document.querySelectorAll('a.js-like').forEach(function (link) {
		    //console.log(link);
		    link.addEventListener('click', onClickBtnLike);
        })
	</script>
{% endblock %}
